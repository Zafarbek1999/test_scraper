services:
  web:
    container_name: "scraper-web"
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: >
      sh -c "python3 manage.py migrate --noinput
      && gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers=2 --threads=4 --log-level info --access-logfile -"
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
  db:
    image: postgres
    container_name: "scraper-db"
    restart: always
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data/
    expose:
      - 5432
    command: >
      postgres -c shared_buffers=128MB
               -c effective_cache_size=512MB
               -c work_mem=4MB
               -c maintenance_work_mem=32MB
  redis:
    image: redis:latest
    container_name: "scraper-redis"
    restart: always
    expose:
      - 6379
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
  celery:
    container_name: "scraper-celery"
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: >
      sh -c "celery -A config worker --concurrency=2 --loglevel=info"
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - web

  celery-beat:
    container_name: "scraper-celery-beat"
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: >
      sh -c "celery -A config beat --loglevel=info"
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - web
      - celery
volumes:
  pg_data: